{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  setup() {\n    const connectionStatus = ref('Not connected');\n    const dataArray = ref([{\n      id: 12,\n      device: 'DEFAULT NOT CONNECTED',\n      Temp: 0,\n      pressure: 0,\n      amp: 0,\n      status: '',\n      valve1: '',\n      valve1_status: '',\n      valve2: '',\n      valve2_status: '',\n      valve3: '',\n      valve3_status: '',\n      timer1: '',\n      timer2: ''\n    }]);\n    let socket = null;\n    const connectWebSocket = () => {\n      // Replace with your WebSocket server URL\n      const serverUrl = 'wss://32zhhpmuta.execute-api.us-east-1.amazonaws.com/production';\n      socket = new WebSocket(serverUrl);\n      socket.onopen = () => {\n        connectionStatus.value = 'Connected';\n      };\n      socket.onmessage = event => {\n        const jsonData = event.data;\n        const newDataArray = JSON.parse(jsonData);\n        if (newDataArray.length > 0) {\n          dataArray.value = newDataArray;\n        }\n      };\n      socket.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      socket.onclose = () => {\n        connectionStatus.value = 'Disconnected';\n      };\n    };\n    onMounted(() => {\n      connectWebSocket();\n    });\n    onBeforeUnmount(() => {\n      if (socket) {\n        socket.close();\n      }\n    });\n    return {\n      connectionStatus,\n      dataArray\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","setup","connectionStatus","dataArray","id","device","Temp","pressure","amp","status","valve1","valve1_status","valve2","valve2_status","valve3","valve3_status","timer1","timer2","socket","connectWebSocket","serverUrl","WebSocket","onopen","value","onmessage","event","jsonData","data","newDataArray","JSON","parse","length","onerror","error","console","onclose","close"],"sources":["D:\\Project\\PROOFOFCONCEPT3\\VueJS_Flask_Socket-main\\VueJS_Flask_Socket-main\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>WebSocket Connection Example</h1>\n    <p>Status: {{ connectionStatus }}</p>\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Device</th>\n          <th>Temperature</th>\n          <th>Pressure</th>\n          <th>Amp</th>\n          <th>Status</th>\n          <th>Valve 1</th>\n          <th>Valve 1 Status</th>\n          <th>Valve 2</th>\n          <th>Valve 2 Status</th>\n          <th>Valve 3</th>\n          <th>Valve 3 Status</th>\n          <th>Timer 1</th>\n          <th>Timer 2</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in dataArray\" :key=\"item.id\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.device }}</td>\n          <td>{{ item.Temp }}</td>\n          <td>{{ item.pressure }}</td>\n          <td>{{ item.amp }}</td>\n          <td>{{ item.status }}</td>\n          <td>{{ item.valve1 }}</td>\n          <td>{{ item.valve1_status }}</td>\n          <td>{{ item.valve2 }}</td>\n          <td>{{ item.valve2_status }}</td>\n          <td>{{ item.valve3 }}</td>\n          <td>{{ item.valve3_status }}</td>\n          <td>{{ item.timer1 }}</td>\n          <td>{{ item.timer2 }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\n\nexport default {\n  setup() {\n    const connectionStatus = ref('Not connected');\n    const dataArray = ref([\n      {\n        id: 12,\n        device: 'DEFAULT NOT CONNECTED',\n        Temp: 0,\n        pressure: 0,\n        amp: 0,\n        status: '',\n        valve1: '',\n        valve1_status: '',\n        valve2: '',\n        valve2_status: '',\n        valve3: '',\n        valve3_status: '',\n        timer1: '',\n        timer2: '',\n      },\n    ]);\n    let socket = null;\n\n    const connectWebSocket = () => {\n      // Replace with your WebSocket server URL\n      const serverUrl = 'wss://32zhhpmuta.execute-api.us-east-1.amazonaws.com/production';\n      socket = new WebSocket(serverUrl);\n\n      socket.onopen = () => {\n        connectionStatus.value = 'Connected';\n      };\n\n      socket.onmessage = (event) => {\n        const jsonData = event.data;\n        const newDataArray = JSON.parse(jsonData);\n\n        if (newDataArray.length > 0) {\n          dataArray.value = newDataArray;\n        }\n      };\n\n      socket.onerror = (error) => {\n        console.error('WebSocket error:', error);\n      };\n\n      socket.onclose = () => {\n        connectionStatus.value = 'Disconnected';\n      };\n    };\n\n    onMounted(() => {\n      connectWebSocket();\n    });\n\n    onBeforeUnmount(() => {\n      if (socket) {\n        socket.close();\n      }\n    });\n\n    return {\n      connectionStatus,\n      dataArray,\n    };\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":"AA8CA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AAErD,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,gBAAe,GAAIJ,GAAG,CAAC,eAAe,CAAC;IAC7C,MAAMK,SAAQ,GAAIL,GAAG,CAAC,CACpB;MACEM,EAAE,EAAE,EAAE;MACNC,MAAM,EAAE,uBAAuB;MAC/BC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE,CAAC;MACXC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV,CAAC,CACF,CAAC;IACF,IAAIC,MAAK,GAAI,IAAI;IAEjB,MAAMC,gBAAe,GAAIA,CAAA,KAAM;MAC7B;MACA,MAAMC,SAAQ,GAAI,iEAAiE;MACnFF,MAAK,GAAI,IAAIG,SAAS,CAACD,SAAS,CAAC;MAEjCF,MAAM,CAACI,MAAK,GAAI,MAAM;QACpBpB,gBAAgB,CAACqB,KAAI,GAAI,WAAW;MACtC,CAAC;MAEDL,MAAM,CAACM,SAAQ,GAAKC,KAAK,IAAK;QAC5B,MAAMC,QAAO,GAAID,KAAK,CAACE,IAAI;QAC3B,MAAMC,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;QAEzC,IAAIE,YAAY,CAACG,MAAK,GAAI,CAAC,EAAE;UAC3B5B,SAAS,CAACoB,KAAI,GAAIK,YAAY;QAChC;MACF,CAAC;MAEDV,MAAM,CAACc,OAAM,GAAKC,KAAK,IAAK;QAC1BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C,CAAC;MAEDf,MAAM,CAACiB,OAAM,GAAI,MAAM;QACrBjC,gBAAgB,CAACqB,KAAI,GAAI,cAAc;MACzC,CAAC;IACH,CAAC;IAEDxB,SAAS,CAAC,MAAM;MACdoB,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFnB,eAAe,CAAC,MAAM;MACpB,IAAIkB,MAAM,EAAE;QACVA,MAAM,CAACkB,KAAK,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;IAEF,OAAO;MACLlC,gBAAgB;MAChBC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}